{"version":3,"sources":["Calculator.js","colors.js","index.js","Media/metal.jpeg"],"names":["Form","styled","div","_templateObject","Object","taggedTemplateLiteral","metal","Result","_templateObject2","Calculator","_useState","useState","_useState2","slicedToArray","og","setOg","_useState3","_useState4","fg","setFg","_useState5","_useState6","abv","setAbv","useEffect","react_default","a","createElement","Fragment","type","orient","min","max","step","value","onChange","e","parseFloat","target","dist_default","id","style","height","margin","nrOfLevels","colors","arcWidth","needleColor","needleBaseColor","percent","formatTextValue","GlobalStyle","createGlobalStyle","src_templateObject","Container","src_templateObject2","App","src_Calculator","rootElement","document","getElementById","ReactDOM","render","src_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.645dd248.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { bottle, label, labelPrimary } from './colors';\nimport GaugeChart from 'react-gauge-chart';\nimport metal from './Media/metal.jpeg';\n\nconst Form = styled.div`\n  width: 700px;\n  \n  div {\n    padding: 12px 0px;\n  }\n  /* float-container {\n    border: 3px solid #fff;\n    padding: 20px;\n}\n\nfloat-child {\n    width: 25%;\n    float: left;\n    padding: 20px;\n    border: 2px solid blue;\n}  */\ngrid-container {\n    display: grid;\n    grid-template-columns: 100px 100px 100px 100px 100px 100px 100px 100px 100px;\n    padding: 20px\n    margin-left: 20%;\n}\n  input[type=range] {\n    -webkit-appearance: none;\n    width: 100%;\n    transform: rotate(270deg);\n    outline: none;\n  }\n\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 15px;\n    height: 4.4px;\n    cursor: pointer;\n    animate: 0.2s;\n    background: #03045e;\n    border-radius: 5px;\n  }\n\n  input[type=range]::-webkit-slider-thumb {\n    height: 15px;\n    width: 15px;\n    border-radius: 5px;\n    background: url(${metal}) no-repeat center center fixed;\n    cursor: pointer;\n    -webkit-appearance: none;\n    margin-top: -5px;\n  }\n  /*input {\n    width: 3px;\n    height: 100px;\n    border-radius: 5px;\n    background: ${labelPrimary};\n    outline: none;\n    opacity: 1;\n    transition: opacity 0.2s;\n    -webkit-appearance: none;\n    \n\n    :hover {\n      opacity: .87;\n    }\n\n\n    ::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      width: 15px;\n      height: 15px;\n      border-radius: 50%;\n      background: url(${metal}) no-repeat center center fixed\n      cursor: pointer;\n      margin-top: -14px;\n    }\n  }*/\n  output {\n    color: ${labelPrimary};\n    font-size: 1.2rem;\n    text-align: center;\n    margin-bottom: 10px;\n    margin-top: 10px;\n  }\n`;\n\nconst Result = styled.div`\n  color: ${label};\n  font-size: 60px;\n  margin: 15px 0;\n  small {\n    font-size: 40px;\n  }\n`;\n\nconst Calculator = () => {\n  const [og, setOg] = useState(0);\n  const [fg, setFg] = useState(0);\n  const [abv, setAbv] = useState(0);\n\n  useEffect(() => {\n    setAbv(og + fg);\n  }, [og, fg]);\n\n  \n  return (\n    <>\n    <div>\n      <Form>\n        <div>\n        <grid-container>\n          <output>2</output>\n          <output>2</output>\n        </grid-container>\n        <grid-container>\n          <input\n            type=\"range\" \n            orient=\"vertical\"\n            min=\"0\"\n            max=\"2\"\n            step=\"1\"\n            value={og}\n            onChange={e => setOg(parseFloat(e.target.value))}\n          />\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"2\"\n            step=\"1\"\n            value={fg}\n            onChange={e => setFg(parseFloat(e.target.value))}\n          />\n        </grid-container>\n        <grid-container>\n          <output>2</output>\n          <output>2</output>\n          <output>2</output>\n          <output>2</output>\n        </grid-container>\n        <grid-container>\n          <input\n            type=\"range\" \n            orient=\"vertical\"\n            min=\"0\"\n            max=\"2\"\n            step=\"1\"\n            value={og}\n            onChange={e => setOg(parseFloat(e.target.value))}\n          />\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"2\"\n            step=\"1\"\n            value={fg}\n            onChange={e => setFg(parseFloat(e.target.value))}\n          />\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"2\"\n            step=\"1\"\n            value={fg}\n            onChange={e => setFg(parseFloat(e.target.value))}\n          />\n          <input\n          type=\"range\"\n          min=\"0\"\n          max=\"2\"\n          step=\"1\"\n          value={fg}\n          onChange={e => setFg(parseFloat(e.target.value))}\n        />\n        </grid-container>\n        </div>\n      </Form>\n      </div>\n\n      <GaugeChart\n        id=\"gc\"\n        style={{ height: '100px', margin: '25px' }}\n        nrOfLevels={20}\n        colors={[bottle, labelPrimary]}\n        arcWidth={.085}\n        needleColor={labelPrimary}\n        needleBaseColor={labelPrimary}\n        percent={abv/4}\n        formatTextValue={() => ''}\n      />\n      <Result>\n        {(abv/4)*100}%\n      </Result>\n    </>\n  );\n};\n\nexport default Calculator;\n","export const bottle = \"#c5cfdc\";\nexport const highlight = \"#60D678\";\nexport const label = \"#c5cfdc\";\nexport const labelShadow = \"#B5913C\";\nexport const labelPrimary = \"#03045e\";\nexport const labelPrimaryShadow = \"#802422\";\nexport const labelSecondary = \"#FFEC99\";\nexport const cap = \"#949494\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { labelPrimary } from \"./colors\";\nimport Calculator from \"./Calculator\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Lobster');\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: \"Ariel\";\n  background: #FFFFFF;\n\n  ::before {\n    content: ' ';\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n    opacity: 0.8;\n    background-size: cover;\n  }\n}\n\nh1 {\n  color: ${labelPrimary};\n  text-align: center;\n  font-size: 40px;\n}\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyle />\n      <h1>Performance Calculator</h1>\n      <Container>\n        <Calculator />\n      </Container>\n    </>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","module.exports = __webpack_public_path__ + \"static/media/metal.849fa99c.jpeg\";"],"sourceRoot":""}